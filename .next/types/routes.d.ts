// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/auth/confirm-email" | "/auth/forgot-password" | "/auth/login" | "/auth/register" | "/auth/update-password" | "/dashboard" | "/dashboard/admin" | "/dashboard/admin/appointments" | "/dashboard/admin/appointments/new" | "/dashboard/admin/inventory" | "/dashboard/admin/messages" | "/dashboard/admin/patients" | "/dashboard/admin/vaccination-cards" | "/dashboard/book" | "/dashboard/book/success" | "/dashboard/history" | "/dashboard/messages" | "/dashboard/user" | "/dashboard/vaccination"
type AppRouteHandlerRoutes = "/api/appointments" | "/api/messages"
type PageRoutes = never
type LayoutRoutes = "/" | "/dashboard" | "/dashboard/admin"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/api/appointments": {}
  "/api/messages": {}
  "/auth/confirm-email": {}
  "/auth/forgot-password": {}
  "/auth/login": {}
  "/auth/register": {}
  "/auth/update-password": {}
  "/dashboard": {}
  "/dashboard/admin": {}
  "/dashboard/admin/appointments": {}
  "/dashboard/admin/appointments/new": {}
  "/dashboard/admin/inventory": {}
  "/dashboard/admin/messages": {}
  "/dashboard/admin/patients": {}
  "/dashboard/admin/vaccination-cards": {}
  "/dashboard/book": {}
  "/dashboard/book/success": {}
  "/dashboard/history": {}
  "/dashboard/messages": {}
  "/dashboard/user": {}
  "/dashboard/vaccination": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
  "/dashboard": never
  "/dashboard/admin": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
